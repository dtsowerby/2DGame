#pragma once

#ifdef __EMSCRIPTEN__
#define RESOURCES(x) "res-web/" #x
#else
#define RESOURCES(x) "res/" #x
#endif

#include "HandmadeMath.h"

typedef struct Character {
  int codePoint, x, y, width, height, originX, originY, advance;
} Character;

typedef struct Font {
  const char *name;
  int size, bold, italic, width, height, characterCount;
  Character *characters;
  const char *texturePath;
} Font;

static Character font_chars[] = {
  {' ', 9, 112, 3, 3, 1, 1, 8},
  {'!', 94, 94, 10, 18, 2, 17, 12},
  {'"', 278, 94, 15, 5, 2, 17, 17},
  {'#', 92, 22, 21, 18, 2, 17, 23},
  {'$', 0, 0, 21, 22, 2, 19, 23},
  {'%', 228, 0, 23, 18, 2, 17, 25},
  {'&', 21, 0, 21, 22, 2, 19, 23},
  {'\'', 293, 94, 9, 5, 2, 17, 11},
  {'(', 34, 94, 15, 18, 2, 17, 17},
  {')', 49, 94, 15, 18, 2, 17, 17},
  {'*', 123, 94, 18, 13, 2, 17, 20},
  {'+', 167, 94, 21, 12, 2, 14, 23},
  {',', 227, 94, 9, 8, 2, 4, 11},
  {'-', 236, 94, 21, 5, 2, 10, 23},
  {'.', 302, 94, 9, 5, 2, 4, 11},
  {'/', 251, 0, 23, 18, 2, 17, 25},
  {'0', 113, 22, 21, 18, 2, 17, 23},
  {'1', 104, 94, 10, 18, 2, 17, 12},
  {'2', 134, 22, 21, 18, 2, 17, 23},
  {'3', 155, 22, 21, 18, 2, 17, 23},
  {'4', 176, 22, 21, 18, 2, 17, 23},
  {'5', 197, 22, 21, 18, 2, 17, 23},
  {'6', 218, 22, 21, 18, 2, 17, 23},
  {'7', 239, 22, 21, 18, 2, 17, 23},
  {'8', 260, 22, 21, 18, 2, 17, 23},
  {'9', 281, 22, 21, 18, 2, 17, 23},
  {':', 114, 94, 9, 18, 2, 17, 11},
  {';', 94, 0, 9, 21, 2, 17, 11},
  {'<', 269, 76, 17, 18, 2, 17, 19},
  {'=', 188, 94, 21, 12, 2, 14, 23},
  {'>', 286, 76, 17, 18, 2, 17, 19},
  {'?', 0, 40, 21, 18, 2, 17, 23},
  {'@', 103, 0, 25, 18, 2, 17, 27},
  {'A', 21, 40, 21, 18, 2, 17, 23},
  {'B', 42, 40, 21, 18, 2, 17, 23},
  {'C', 63, 40, 21, 18, 2, 17, 23},
  {'D', 84, 40, 21, 18, 2, 17, 23},
  {'E', 105, 40, 21, 18, 2, 17, 23},
  {'F', 126, 40, 21, 18, 2, 17, 23},
  {'G', 147, 40, 21, 18, 2, 17, 23},
  {'H', 168, 40, 21, 18, 2, 17, 23},
  {'I', 189, 76, 20, 18, 2, 17, 22},
  {'J', 189, 40, 21, 18, 2, 17, 23},
  {'K', 274, 0, 23, 18, 2, 17, 25},
  {'L', 210, 40, 21, 18, 2, 17, 23},
  {'M', 128, 0, 25, 18, 2, 17, 27},
  {'N', 231, 40, 21, 18, 2, 17, 23},
  {'O', 252, 40, 21, 18, 2, 17, 23},
  {'P', 273, 40, 21, 18, 2, 17, 23},
  {'Q', 52, 0, 21, 21, 2, 17, 23},
  {'R', 294, 40, 21, 18, 2, 17, 23},
  {'S', 0, 58, 21, 18, 2, 17, 23},
  {'T', 209, 76, 20, 18, 2, 17, 22},
  {'U', 21, 58, 21, 18, 2, 17, 23},
  {'V', 42, 58, 21, 18, 2, 17, 23},
  {'W', 153, 0, 25, 18, 2, 17, 27},
  {'X', 63, 58, 21, 18, 2, 17, 23},
  {'Y', 0, 22, 23, 18, 2, 17, 25},
  {'Z', 84, 58, 21, 18, 2, 17, 23},
  {'[', 64, 94, 15, 18, 2, 17, 17},
  {'\\', 23, 22, 23, 18, 2, 17, 25},
  {']', 79, 94, 15, 18, 2, 17, 17},
  {'^', 209, 94, 18, 12, 2, 17, 20},
  {'_', 257, 94, 21, 5, 2, -1, 23},
  {'`', 0, 112, 9, 5, 2, 17, 11},
  {'a', 105, 58, 21, 18, 2, 17, 23},
  {'b', 126, 58, 21, 18, 2, 17, 23},
  {'c', 147, 58, 21, 18, 2, 17, 23},
  {'d', 168, 58, 21, 18, 2, 17, 23},
  {'e', 189, 58, 21, 18, 2, 17, 23},
  {'f', 210, 58, 21, 18, 2, 17, 23},
  {'g', 231, 58, 21, 18, 2, 17, 23},
  {'h', 252, 58, 21, 18, 2, 17, 23},
  {'i', 229, 76, 20, 18, 2, 17, 22},
  {'j', 273, 58, 21, 18, 2, 17, 23},
  {'k', 46, 22, 23, 18, 2, 17, 25},
  {'l', 294, 58, 21, 18, 2, 17, 23},
  {'m', 178, 0, 25, 18, 2, 17, 27},
  {'n', 0, 76, 21, 18, 2, 17, 23},
  {'o', 21, 76, 21, 18, 2, 17, 23},
  {'p', 42, 76, 21, 18, 2, 17, 23},
  {'q', 73, 0, 21, 21, 2, 17, 23},
  {'r', 63, 76, 21, 18, 2, 17, 23},
  {'s', 84, 76, 21, 18, 2, 17, 23},
  {'t', 249, 76, 20, 18, 2, 17, 22},
  {'u', 105, 76, 21, 18, 2, 17, 23},
  {'v', 126, 76, 21, 18, 2, 17, 23},
  {'w', 203, 0, 25, 18, 2, 17, 27},
  {'x', 147, 76, 21, 18, 2, 17, 23},
  {'y', 69, 22, 23, 18, 2, 17, 25},
  {'z', 168, 76, 21, 18, 2, 17, 23},
  {'{', 0, 94, 17, 18, 2, 17, 19},
  {'|', 42, 0, 10, 22, 2, 19, 12},
  {'}', 17, 94, 17, 18, 2, 17, 19},
  {'~', 141, 94, 26, 12, 2, 14, 28},
};

static Font upheaval = {"Upheaval", 32, 0, 0, 315, 117, 95, font_chars, RESOURCES(fonts/upheaval.png)};

// Function declarations
void initFont();
Character getChar(char c);
void flushFontBatch();
void addCharToBatch(Font font, char c, HMM_Vec2 position, HMM_Vec3 color, float scale);
void drawChar(Font font, char c, HMM_Vec2 position, HMM_Vec3 color, float scale);
void drawString(Font font, const char* str, HMM_Vec2 position, HMM_Vec3 color, float scale);
HMM_Vec2 measureString(Font font, const char* str, float scale);
void cleanupFont();

